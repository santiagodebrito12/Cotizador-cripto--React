{"version":3,"sources":["cryptomonedas.png","components/Error.js","hooks/useMoneda.js","hooks/useCriptomonedas.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","moneda","codigo","nombre","useCriptomoneda","opcion","CoinInfo","Name","FullName","Id","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultarApi","onSubmit","preventDefault","type","Cotizacion","cotizacion","PRICE","HIGHDAY","LOWDAY","className","Spinner","class","Contenedor","div","Imagen","img","Heading","h1","App","guardarCotizacion","busqueda","guardarBusqueda","url","setTimeout","DISPLAY","cotizarBusqueda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0443bdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst MensajeError = styled.p`\r\n     background-color:#b7322c;\r\n     padding:1rem;\r\n     color:#fff;\r\n     font-size:30px;\r\n     text-transform:uppercase;\r\n     font-weight:bold;\r\n     text-align:center;\r\n     font-family:'Bebas Neue', cursive;\r\n     \r\n`;\r\n\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n        <MensajeError>{mensaje}</MensajeError>\r\n     );\r\n}\r\n \r\nexport default Error;","import React,{Fragment,useState} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue',cursive;\r\n    color:#ffff;\r\n    text-transform:uppercase;\r\n    font-weight:bold;\r\n    font-size:2.4rem;\r\n    margin-top:2rem;\r\n    display:block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width:100%;\r\n    display:block;\r\n    padding:1rem;\r\n    -webkit-appearance:none;\r\n    border-radius:10px;\r\n    border:none;\r\n    font-size:1.2rem;\r\n`;\r\n\r\n\r\n\r\nconst useMoneda = (label,stateInicial,opciones) => {\r\n  \r\n   \r\n    //STATE DEL HOOKS\r\n    const[state,actualizarState]=useState(stateInicial);\r\n\r\n    const Seleccionar = () =>(\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n            onChange={e=>actualizarState(e.target.value)}\r\n            value={state}>\r\n            <option value=\"\">Seleccione</option>\r\n                {opciones.map((moneda)=>( \r\n                <option key={moneda.codigo} value={moneda.codigo}>{moneda.nombre}</option>\r\n                ))}\r\n               \r\n            </Select>\r\n        </Fragment>\r\n    );\r\n\r\n    //Retornar state, interfaz y fn que modifica el state\r\n  \r\n    return[state, Seleccionar,actualizarState];\r\n\r\n\r\n}\r\n \r\nexport default useMoneda;\r\n\r\n\r\n","import React,{Fragment,useState} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue',cursive;\r\n    color:#ffff;\r\n    text-transform:uppercase;\r\n    font-weight:bold;\r\n    font-size:2.4rem;\r\n    margin-top:2rem;\r\n    display:block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width:100%;\r\n    display:block;\r\n    padding:1rem;\r\n    -webkit-appearance:none;\r\n    border-radius:10px;\r\n    border:none;\r\n    font-size:1.2rem;\r\n`;\r\n\r\n\r\n\r\nconst useCriptomoneda = (label,stateInicial,opciones) => {\r\n   \r\n    //STATE DEL HOOKS\r\n    \r\n    const[state,actualizarState]=useState(stateInicial);\r\n   \r\n    \r\n    const SelectCripto = () =>(\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n            onChange={e=>actualizarState(e.target.value)}\r\n            value={state}>\r\n            <option value=\"\">Seleccione</option>\r\n            {opciones.map((opcion)=>( \r\n                <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\r\n                ))}\r\n            </Select> \r\n        </Fragment>\r\n    );\r\n\r\n    //Retornar state, interfaz y fn que modifica el state\r\n  \r\n    return[state, SelectCripto,actualizarState];\r\n\r\n\r\n}\r\n \r\nexport default useCriptomoneda;\r\n\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Error from './Error';\r\n\r\nimport useMoneda from '../hooks/useMoneda';\r\nimport useCriptomoneda from '../hooks/useCriptomonedas';\r\nimport axios from 'axios';\r\n\r\nconst Boton = styled.input`\r\n    margin-top:20px;\r\n    font-weight:bold;\r\n    font-size:20px;\r\n    padding:10px;\r\n    background-color:#66a2fe;\r\n    border:none;\r\n    width:100%;\r\n    border-radius:10px;\r\n    color:#fff;\r\n    transition:background-color:.3s ease;\r\n    \r\n    &:hover{\r\n        background-color:#326AC0;\r\n        cursor:pointer;\r\n    }`;\r\n\r\nconst Formulario = ({guardarMoneda,guardarCriptomoneda}) => {\r\n    \r\n\r\n    const[listacripto,guardarCriptomonedas] = useState([]);\r\n    const[error , guardarError] = useState(false);\r\n\r\n    const MONEDAS=[\r\n        {codigo:'USD',nombre:'Dolar de Estados Unidos'},\r\n        {codigo:'MXN',nombre:'Peso Mexicano'},\r\n        {codigo:'ARG',nombre:'Peso Argentino'},\r\n        {codigo:'EUR',nombre:'Euro'},\r\n    ]\r\n\r\n    const[moneda,SelectMonedas]=useMoneda('Elige tu Moneda','',MONEDAS);\r\n    const[criptomoneda,SelectCripto]=useCriptomoneda('Elige tu Criptomoneda','',listacripto);\r\n\r\n\r\n    //ejecutar llamado a la api\r\n\r\n    useEffect(()=>{\r\n        const consultarApi = async() =>{\r\n         \r\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\r\n          \r\n            const resultado = await axios.get(url);\r\n         \r\n            guardarCriptomonedas(resultado.data.Data);\r\n\r\n        }\r\n  \r\n    consultarApi();\r\n\r\n    },[]);\r\n\r\n    //cuando el usuario hace submite\r\n    const cotizarMoneda = e =>{\r\n        e.preventDefault();\r\n        //validacion\r\n\r\n        if(moneda === \"\" || criptomoneda ===\"\"){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n         \r\n        //pasar los datos al componente principal\r\n\r\n        guardarError(false);\r\n        guardarMoneda(moneda);\r\n        guardarCriptomoneda(criptomoneda);\r\n    }\r\n\r\n    return (\r\n        <form\r\n        \r\n        onSubmit={cotizarMoneda}\r\n        >\r\n            {error ? <Error mensaje='Ambos campos son obligatorios' /> : null }\r\n        <SelectMonedas\r\n        />\r\n        <SelectCripto\r\n        />\r\n        <Boton type=\"submit\" value=\"Calcular\"></Boton>\r\n        </form>\r\n      );\r\n}\r\n \r\nexport default Formulario;","import React,{Fragment} from 'react';\r\n\r\n\r\nconst Cotizacion = ({cotizacion}) => {\r\n    const{PRICE,HIGHDAY,LOWDAY}=cotizacion;\r\n   \r\n    return ( \r\n        <Fragment>\r\n        <p className=\"resultado\">Precio actual: {PRICE}</p>\r\n        <p className=\"resultado\">Precio mas alto del dia: {HIGHDAY}</p>\r\n        <p className=\"resultado\">Precio mas bajo del dia: {LOWDAY}</p>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Cotizacion;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div class=\"sk-chase\">\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Spinner;","import React,{useState,useEffect} from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport imagen from './cryptomonedas.png';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\n\n\n\nconst Contenedor= styled.div `\nmax-width:900px;\nmargin: 0 auto;\n@media(min-width:992px){\n  display:grid;\n  grid-template-columns: repeat(2,1fr);\n  column-gap:2rem;\n}\n`;\n\nconst Imagen = styled.img`\n  max-width:100%;\n  margin-top:5rem;\n`;\n\nconst Heading = styled.h1`\n  font-family:'Bebas Neue',cursive;\n  color:#fff;\n  text-align:left;\n  font-weight:700;\n  font-size:50px;\n  margin-bottom:50px;\n  margin-top:80px;\n\n  &::after{\n    content:'';\n    width:100px;\n    height:6px;\n    background-color:#66A2FE;\n    display:block;\n  }\n`;\n\n\nfunction App() {\n  \n  const [moneda,guardarMoneda] = useState('');\n  const [criptomoneda,guardarCriptomoneda] = useState('');\n  const [cotizacion,guardarCotizacion]=useState({});\n  const [busqueda,guardarBusqueda] = useState(false);\n  \n  useEffect(()=>{\n    //evita la ejeccuon la primera vez\n  \n    const cotizarBusqueda = async () =>{\n      if(moneda==='') return;\n  \n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n  \n      const resultado = await axios.get(url);\n      guardarBusqueda(true);\n\n      setTimeout(() => {\n        guardarCotizacion(resultado.data.DISPLAY[criptomoneda][moneda]);\n        guardarBusqueda(false);\n      }, 3000);\n      \n      \n\n\n    }\n  \n    cotizarBusqueda();\n       \n  },[moneda,criptomoneda])\n  \n  const componente = (busqueda) ? <Spinner/> : <Cotizacion cotizacion={cotizacion}/>;\n  \n  \n  return (\n   <Contenedor>\n     <div>\n      <Imagen\n      src={imagen}\n      alt=\"foto cripto\"\n      />\n     </div>\n     <div>\n      <Heading>Cotiza cryptomonedas al Instante</Heading>\n      <Formulario\n      guardarMoneda={guardarMoneda}\n      guardarCriptomoneda={guardarCriptomoneda}/>\n      {componente}\n     </div>\n     \n\n   </Contenedor>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}